package com.yarmook.realstate.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaymentPlanItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentPlanItemAllPropertiesEquals(PaymentPlanItem expected, PaymentPlanItem actual) {
        assertPaymentPlanItemAutoGeneratedPropertiesEquals(expected, actual);
        assertPaymentPlanItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentPlanItemAllUpdatablePropertiesEquals(PaymentPlanItem expected, PaymentPlanItem actual) {
        assertPaymentPlanItemUpdatableFieldsEquals(expected, actual);
        assertPaymentPlanItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentPlanItemAutoGeneratedPropertiesEquals(PaymentPlanItem expected, PaymentPlanItem actual) {
        assertThat(actual)
            .as("Verify PaymentPlanItem auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentPlanItemUpdatableFieldsEquals(PaymentPlanItem expected, PaymentPlanItem actual) {
        assertThat(actual)
            .as("Verify PaymentPlanItem relevant properties")
            .satisfies(a -> assertThat(a.getOrderNo()).as("check orderNo").isEqualTo(expected.getOrderNo()))
            .satisfies(a -> assertThat(a.getPaymentTime()).as("check paymentTime").isEqualTo(expected.getPaymentTime()))
            .satisfies(a -> assertThat(a.getPercentOfPayment()).as("check percentOfPayment").isEqualTo(expected.getPercentOfPayment()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentPlanItemUpdatableRelationshipsEquals(PaymentPlanItem expected, PaymentPlanItem actual) {
        assertThat(actual)
            .as("Verify PaymentPlanItem relationships")
            .satisfies(a -> assertThat(a.getPlan()).as("check plan").isEqualTo(expected.getPlan()));
    }
}
