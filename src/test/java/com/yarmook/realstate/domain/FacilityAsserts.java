package com.yarmook.realstate.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FacilityAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFacilityAllPropertiesEquals(Facility expected, Facility actual) {
        assertFacilityAutoGeneratedPropertiesEquals(expected, actual);
        assertFacilityAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFacilityAllUpdatablePropertiesEquals(Facility expected, Facility actual) {
        assertFacilityUpdatableFieldsEquals(expected, actual);
        assertFacilityUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFacilityAutoGeneratedPropertiesEquals(Facility expected, Facility actual) {
        assertThat(actual)
            .as("Verify Facility auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFacilityUpdatableFieldsEquals(Facility expected, Facility actual) {
        assertThat(actual)
            .as("Verify Facility relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getSource()).as("check source").isEqualTo(expected.getSource()))
            .satisfies(a -> assertThat(a.getImageUrl()).as("check imageUrl").isEqualTo(expected.getImageUrl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFacilityUpdatableRelationshipsEquals(Facility expected, Facility actual) {
        assertThat(actual)
            .as("Verify Facility relationships")
            .satisfies(a -> assertThat(a.getProperty()).as("check property").isEqualTo(expected.getProperty()));
    }
}
