package com.yarmook.realstate.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MapPointAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMapPointAllPropertiesEquals(MapPoint expected, MapPoint actual) {
        assertMapPointAutoGeneratedPropertiesEquals(expected, actual);
        assertMapPointAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMapPointAllUpdatablePropertiesEquals(MapPoint expected, MapPoint actual) {
        assertMapPointUpdatableFieldsEquals(expected, actual);
        assertMapPointUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMapPointAutoGeneratedPropertiesEquals(MapPoint expected, MapPoint actual) {
        assertThat(actual)
            .as("Verify MapPoint auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMapPointUpdatableFieldsEquals(MapPoint expected, MapPoint actual) {
        assertThat(actual)
            .as("Verify MapPoint relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDistanceKm()).as("check distanceKm").isEqualTo(expected.getDistanceKm()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMapPointUpdatableRelationshipsEquals(MapPoint expected, MapPoint actual) {
        assertThat(actual)
            .as("Verify MapPoint relationships")
            .satisfies(a -> assertThat(a.getProperty()).as("check property").isEqualTo(expected.getProperty()));
    }
}
